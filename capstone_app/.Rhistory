shiny::runApp('Dropbox/Documents/python/f16-GS/capstone_app')
runApp('Dropbox/Documents/python/f16-GS/capstone_app')
runApp('Dropbox/Documents/python/f16-GS/capstone_app')
#setwd('/home/hs2865/src/f16-GS/capstone_app')
setwd('/Users/manuelrueda/Dropbox/Documents/python/f16-GS/capstone_app')
## Read data.
#companies <- read.csv('cik_new.csv', header=FALSE, sep='|', stringsAsFactors = FALSE)
companies <- read.csv('cik_sample.csv', stringsAsFactors = FALSE)
colnames(companies) <- c('Company.Name', 'CIK')
companies$CIK <- sprintf('%010d', companies$CIK)
companies <- companies[!duplicated(companies[,'CIK']),]
risk_data <- read.csv("risk_data.csv")
business_data <- read.csv("business_data.csv")
## Clean and format risk.
risk_data <- unique(risk_data)
colnames(risk_data) <- c('CIK', 'Jaccard', 'TF-IDF', 'Word2Vec', 'Common Words', 'Deleted Words','New Words', 'Total Words', 'Top Words', 'Year')
risk_data[,c(2:7)] = round(risk_data[,c(2:7)],2)
risk_data$CIK <- sprintf('%010d', risk_data$CIK)
risk_data <- merge(x = risk_data, y = companies[,c('CIK', 'Company.Name')], by = "CIK", all.x = TRUE)
## Clean and format business.
business_data <- unique(business_data)
colnames(business_data) <- c('CIK', 'Jaccard', 'TF-IDF', 'Word2Vec', 'Common Words', 'Deleted Words','New Words', 'Total Words', 'Top Words', 'Year')
business_data[,c(2:7)] = round(business_data[,c(2:7)],2)
business_data$CIK <- sprintf('%010d', business_data$CIK)
business_data <- merge(x = business_data, y = companies[,c('CIK', 'Company.Name')], by = "CIK", all.x = TRUE)
## Remove 2007.
risk_data <- risk_data[risk_data$Year != 2007,]
business_data <- business_data[business_data$Year != 2007,]
## Normalize word2vec.
risk_data$Word2Vec <- round(risk_data$Word2Vec / max(risk_data$Word2Vec),2)
business_data$Word2Vec <- round(business_data$Word2Vec / max(business_data$Word2Vec),2)
## Get means.
means <- round(colMeans(risk_data[,c('Jaccard','TF-IDF','Word2Vec')]),2)
means <- round(colMeans(business_data[,c('Jaccard','TF-IDF','Word2Vec')]),2)
## Get IDs.
#mapping <- seq(length(unique(data$Company.Name)))
#names(mapping) <- unique(data$Company.Name)
#data$Id <- mapping[data$Company.Name]
## Filled heatmap dataset.
all_years = c(2008,2009,2010,2011,2012,2013,2014,2015)
all_companies <- unique(risk_data$CIK)
filled_risk <- risk_data[, c('Year', 'CIK', 'Company.Name', 'Jaccard', 'TF-IDF', 'Word2Vec')]
filled_business <- business_data[, c('Year', 'CIK', 'Company.Name', 'Jaccard', 'TF-IDF', 'Word2Vec')]
## Filled Risk.
for(company in all_companies) {
tmp_data <- risk_data[risk_data$CIK == company, c('Year', 'CIK', 'Company.Name', 'Jaccard', 'TF-IDF', 'Word2Vec')]
missing_years = setdiff(all_years, unique(tmp_data$Year))
name <- unique(tmp_data$Company.Name)
cik <- unique(tmp_data$CIK)
for(year in missing_years) {
new_row = c(year, cik, name, means[1], means[2], means[3])
filled_risk = rbind(filled_risk, new_row)
}
}
filled_risk <- arrange(filled_risk, CIK, Year)
update.cols <- c('Year','Jaccard', 'TF-IDF', 'Word2Vec')
filled_risk[update.cols] <- sapply(filled_risk[update.cols],as.numeric)
## Filled Business.
for(company in all_companies) {
tmp_data <- business_data[business_data$CIK == company, c('Year', 'CIK', 'Company.Name', 'Jaccard', 'TF-IDF', 'Word2Vec')]
missing_years = setdiff(all_years, unique(tmp_data$Year))
name <- unique(tmp_data$Company.Name)
cik <- unique(tmp_data$CIK)
for(year in missing_years) {
new_row = c(year, cik, name, means[1], means[2], means[3])
filled_business = rbind(filled_business, new_row)
}
}
filled_business <- arrange(filled_business, CIK, Year)
update.cols <- c('Year','Jaccard', 'TF-IDF', 'Word2Vec')
filled_business[update.cols] <- sapply(filled_business[update.cols],as.numeric)
## Get IDs.
mapping_risk <- seq(length(unique(filled_risk$Company.Name)))
names(mapping_risk) <- unique(filled_risk$Company.Name)
filled_risk$Id <- mapping_risk[filled_risk$Company.Name]
risk_data$Id <- mapping_risk[risk_data$Company.Name]
mapping_business <- seq(length(unique(filled_business$Company.Name)))
names(mapping_business) <- unique(filled_business$Company.Name)
filled_business$Id <- mapping_business[filled_business$Company.Name]
business_data$Id <- mapping_business[business_data$Company.Name]
## Get list of all companies and CIKs.
cik_map <- unique(risk_data[c('CIK','Company.Name')])
runApp()
risk_data
head(risk_data)
library(dplyr)
risk_data %>%
risk_data %>%
select('Top Words')
select
?select
risk_data %>%
select(Top Words)
setwd('/Users/manuelrueda/Dropbox/Documents/python/f16-GS/capstone_app')
## Read data.
#companies <- read.csv('cik_new.csv', header=FALSE, sep='|', stringsAsFactors = FALSE)
companies <- read.csv('cik_sample.csv', stringsAsFactors = FALSE)
colnames(companies) <- c('Company.Name', 'CIK')
companies$CIK <- sprintf('%010d', companies$CIK)
companies <- companies[!duplicated(companies[,'CIK']),]
risk_data <- read.csv("risk_data.csv")
business_data <- read.csv("business_data.csv")
## Clean and format risk.
risk_data <- unique(risk_data)
colnames(risk_data) <- c('CIK', 'Jaccard', 'TF-IDF', 'Word2Vec', 'Common.Words', 'Deleted.Words','New.Words', 'Total.Words', 'Top.Words', 'Year')
risk_data[,c(2:7)] = round(risk_data[,c(2:7)],2)
risk_data$CIK <- sprintf('%010d', risk_data$CIK)
risk_data <- merge(x = risk_data, y = companies[,c('CIK', 'Company.Name')], by = "CIK", all.x = TRUE)
## Clean and format business.
business_data <- unique(business_data)
colnames(business_data) <- c('CIK', 'Jaccard', 'TF-IDF', 'Word2Vec', 'Common.Words', 'Deleted.Words','New.Words', 'Total.Words', 'Top.Words', 'Year')
business_data[,c(2:7)] = round(business_data[,c(2:7)],2)
business_data$CIK <- sprintf('%010d', business_data$CIK)
business_data <- merge(x = business_data, y = companies[,c('CIK', 'Company.Name')], by = "CIK", all.x = TRUE)
## Remove 2007.
risk_data <- risk_data[risk_data$Year != 2007,]
business_data <- business_data[business_data$Year != 2007,]
## Normalize word2vec.
risk_data$Word2Vec <- round(risk_data$Word2Vec / max(risk_data$Word2Vec),2)
business_data$Word2Vec <- round(business_data$Word2Vec / max(business_data$Word2Vec),2)
## Get means.
means <- round(colMeans(risk_data[,c('Jaccard','TF-IDF','Word2Vec')]),2)
means <- round(colMeans(business_data[,c('Jaccard','TF-IDF','Word2Vec')]),2)
## Get IDs.
#mapping <- seq(length(unique(data$Company.Name)))
#names(mapping) <- unique(data$Company.Name)
#data$Id <- mapping[data$Company.Name]
## Filled heatmap dataset.
all_years = c(2008,2009,2010,2011,2012,2013,2014,2015)
all_companies <- unique(risk_data$CIK)
filled_risk <- risk_data[, c('Year', 'CIK', 'Company.Name', 'Jaccard', 'TF-IDF', 'Word2Vec')]
filled_business <- business_data[, c('Year', 'CIK', 'Company.Name', 'Jaccard', 'TF-IDF', 'Word2Vec')]
## Filled Risk.
for(company in all_companies) {
tmp_data <- risk_data[risk_data$CIK == company, c('Year', 'CIK', 'Company.Name', 'Jaccard', 'TF-IDF', 'Word2Vec')]
missing_years = setdiff(all_years, unique(tmp_data$Year))
name <- unique(tmp_data$Company.Name)
cik <- unique(tmp_data$CIK)
for(year in missing_years) {
new_row = c(year, cik, name, means[1], means[2], means[3])
filled_risk = rbind(filled_risk, new_row)
}
}
filled_risk <- arrange(filled_risk, CIK, Year)
update.cols <- c('Year','Jaccard', 'TF-IDF', 'Word2Vec')
filled_risk[update.cols] <- sapply(filled_risk[update.cols],as.numeric)
## Filled Business.
for(company in all_companies) {
tmp_data <- business_data[business_data$CIK == company, c('Year', 'CIK', 'Company.Name', 'Jaccard', 'TF-IDF', 'Word2Vec')]
missing_years = setdiff(all_years, unique(tmp_data$Year))
name <- unique(tmp_data$Company.Name)
cik <- unique(tmp_data$CIK)
for(year in missing_years) {
new_row = c(year, cik, name, means[1], means[2], means[3])
filled_business = rbind(filled_business, new_row)
}
}
filled_business <- arrange(filled_business, CIK, Year)
update.cols <- c('Year','Jaccard', 'TF-IDF', 'Word2Vec')
filled_business[update.cols] <- sapply(filled_business[update.cols],as.numeric)
## Get IDs.
mapping_risk <- seq(length(unique(filled_risk$Company.Name)))
names(mapping_risk) <- unique(filled_risk$Company.Name)
filled_risk$Id <- mapping_risk[filled_risk$Company.Name]
risk_data$Id <- mapping_risk[risk_data$Company.Name]
mapping_business <- seq(length(unique(filled_business$Company.Name)))
names(mapping_business) <- unique(filled_business$Company.Name)
filled_business$Id <- mapping_business[filled_business$Company.Name]
business_data$Id <- mapping_business[business_data$Company.Name]
## Get list of all companies and CIKs.
cik_map <- unique(risk_data[c('CIK','Company.Name')])
## Word Analytics.
risk_data %>%
select(Top.Words)
library(tidyr)
risk_data %>%
select(Top.Words) %>%
separate(',')
?separate
risk_data %>%
select(Top.Words) %>%
separate(Top.Words, ',') %?%
group_by(CIK)
risk_data %>%
select(Top.Words) %>%
separate(Top.Words, ',')
risk_data %>%
select(Top.Words) %>%
str_split_fixed(Top.Words, ",", 10)
library(stringr)
risk_data %>%
select(Top.Words) %>%
str_split_fixed(Top.Words, ",", 10)
risk_data %>%
select(Top.Words) %>%
str_split_fixed(Top.Words, ",")
risk_data %>%
select(Top.Words) %>%
eparate(Top.Words, sep = "\\.", remove=FALSE)
risk_data %>%
select(Top.Words) %>%
separate(Top.Words, sep = "\\.", remove=FALSE)
risk_data %>%
select(Top.Words) %>%
separate(Top.Words, seq(10), sep = "\\.", remove=FALSE)
risk_data %>%
select(Top.Words)
seq(10)
c(seq(10))
risk_data %>%
select(Top.Words) %>%
separate(Top.Words, seq(10), sep = "\\.", remove=FALSE)
head(risk_data) %>%
select(Top.Words) %>%
separate(Top.Words, seq(10), sep = "\\.", remove=FALSE)
risk_data %>%
select(Top.Words) %>%
separate(Top.Words, seq(10), sep = "\\,", remove=FALSE)
risk_data %>%
select(Top.Words) %>%
separate(Top.Words, seq(10), sep = ",", remove=FALSE)
as.array(seq(10))
as.character(seq(10))
_aas.array(seq(10))
as.array(seq(10))
as.character(seq(10))
risk_data %>%
select(Top.Words) %>%
separate(Top.Words, as.character(seq(10)), sep = ",", remove=FALSE)
risk_data %>%
select(Top.Words) %>%
separate(Top.Words, as.character(seq(10)), sep = ",")
